{
  "abstract" : [
    {
      "text" : "Specifies an action that adds validated items to a view in response to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the system’s Paste command.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/pasteDestination(for:action:validator:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE16pasteDestination3for6action9validatorQrqd__m_ySayqd__GcA2Hct16CoreTransferable0J0Rd__lF::SYNTHESIZED::s:15ColorComponents4HSBAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pasteDestination"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ".Type, "
      },
      {
        "kind" : "externalParam",
        "text" : "action"
      },
      {
        "kind" : "text",
        "text" : ": (["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : "]) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s4Voida",
        "text" : "Void"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "validator"
      },
      {
        "kind" : "text",
        "text" : ": (["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : "]) -> ["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : "]) -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "macOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "pasteDestination(for:action:validator:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "pasteDestination"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "for"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "payloadType"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ".Type = T.self, "
            },
            {
              "kind" : "externalParam",
              "text" : "action"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@escaping "
            },
            {
              "kind" : "text",
              "text" : "(["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : "]) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s4Voida",
              "text" : "Void"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "validator"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@escaping "
            },
            {
              "kind" : "text",
              "text" : "(["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : "]) -> ["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : "] = { $0 }) -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:16CoreTransferable0B0P",
              "text" : "Transferable"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The type of data that the paste destination accepts.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "The type must conform to the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "doc:\/\/com.apple.documentation\/documentation\/coretransferable\/transferable",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "protocol.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "payloadType"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The action to perform when someone uses the system’s Paste",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "command to paste one or more items of the payload type. The closure",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "takes one parameter, which is the array of items to paste.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "action"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that you implement to validate the data to",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "paste. SwiftUI calls this before it calls the ",
                  "type" : "text"
                },
                {
                  "code" : "action",
                  "type" : "codeVoice"
                },
                {
                  "text" : " closure,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "and passes in an array of items to validate. Inspect the items, and",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "return an array that includes only those from the input array that",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "you consider valid. The array that you return from this closure",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "becomes the input to the ",
                  "type" : "text"
                },
                {
                  "code" : "action",
                  "type" : "codeVoice"
                },
                {
                  "text" : " closure. If you return an empty",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "array, SwiftUI doesn’t call the ",
                  "type" : "text"
                },
                {
                  "code" : "action",
                  "type" : "codeVoice"
                },
                {
                  "text" : " closure.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "validator"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that people can paste into using the system Paste",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "command.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this modifier to paste one or more items into a view from the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Clipboard when someone issues a Paste command. People issue a Paste",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "command by choosing Edit > Paste from the app’s menu, or by using the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Command-V keyboard shortcut. The system enables the Paste command for",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "your app when the view in focus provides a paste destination.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, the following code enables people to paste bird names",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "into a list:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct PasteDestinationExample: View {",
            "    @State private var birds: [String] = []",
            "    @State private var selection: Set<String> = []",
            "",
            "    let knownBirds = [\"owl\", \"parrot\", \"swift\",",
            "                      \"sparrow\", \"robin\", \"bluebird\"]",
            "",
            "    var body: some View {",
            "        List(birds, id: \\.self, selection: $selection) {",
            "            Text($0)",
            "        }",
            "        .pasteDestination(for: String.self) { values in",
            "            birds.append(contentsOf: values)",
            "        } validator: { values in",
            "            values.filter { knownBirds.contains($0) }",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The paste destination handles only pasted content with a type that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "matches the ",
              "type" : "text"
            },
            {
              "code" : "payloadType",
              "type" : "codeVoice"
            },
            {
              "text" : " that you specify. The list in the above",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "example only accepts strings.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use the ",
              "type" : "text"
            },
            {
              "code" : "validator",
              "type" : "codeVoice"
            },
            {
              "text" : " closure to restrict the pasted content to items that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "make sense in the context of the view. The above example allows people",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to paste only strings that match one of a known list of bird names",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "because the list is meant to contain only birds. You can omit the final",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "closure if you don’t need to perform any validation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "To enable people to paste using a custom action — like from a",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "context menu item — rather than using the system Paste command,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "access the Clipboard directly using an",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "doc:\/\/com.apple.documentation\/documentation\/appkit\/nspasteboard",
                  "type" : "text"
                },
                {
                  "text" : " or a",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "doc:\/\/com.apple.documentation\/documentation\/uikit\/uipasteboard",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "instance.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/hsba\/pastedestination(for:action:validator:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [
    {
      "text" : "Easily deal with various representations of colors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA": {
  "abstract" : [
    {
      "text" : "An HSBA (hue, saturation, brightness, alpha) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "role" : "symbol",
  "title" : "HSBA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA/pasteDestination(for:action:validator:)": {
  "abstract" : [
    {
      "text" : "Specifies an action that adds validated items to a view in response to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the system’s Paste command.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pasteDestination"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type, "
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": (["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "validator"
    },
    {
      "kind" : "text",
      "text" : ": (["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/pasteDestination(for:action:validator:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pasteDestination(for:action:validator:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba\/pastedestination(for:action:validator:)"
}
}
}