{
  "abstract" : [
    {
      "text" : "Sets the scroll behavior of views scrollable in the provided axes.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/scrollTargetBehavior(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE20scrollTargetBehavioryQrqd__AA06ScrolleF0Rd__lF::SYNTHESIZED::s:15ColorComponents4HSBAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scrollTargetBehavior"
      },
      {
        "kind" : "text",
        "text" : "(some "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI20ScrollTargetBehaviorP",
        "text" : "ScrollTargetBehavior"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "17.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "14.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "17.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "scrollTargetBehavior(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "scrollTargetBehavior"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "behavior"
            },
            {
              "kind" : "text",
              "text" : ": some "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI20ScrollTargetBehaviorP",
              "text" : "ScrollTargetBehavior"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A scrollable view calculates where scroll gestures should end using its",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "deceleration rate and the state of its scroll gesture by default. A",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "scroll behavior allows for customizing this logic. You can provide",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "your own ",
              "type" : "text"
            },
            {
              "code" : "ScrollTargetBehavior",
              "type" : "codeVoice"
            },
            {
              "text" : " or use one of the built in behaviors",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "provided by SwiftUI.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Paging-Behavior",
          "level" : 3,
          "text" : "Paging Behavior",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "SwiftUI offers a ",
              "type" : "text"
            },
            {
              "code" : "PagingScrollTargetBehavior",
              "type" : "codeVoice"
            },
            {
              "text" : " behavior which uses the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "geometry of the scroll view to decide where to allow scrolls to end.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In the following example, every view in the lazy stack is flexible",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "in both directions and the scroll view will settle to container aligned",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "boundaries.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "ScrollView {",
            "    LazyVStack(spacing: 0.0) {",
            "        ForEach(items) { item in",
            "            FullScreenItem(item)",
            "        }",
            "    }",
            "}",
            ".scrollTargetBehavior(.paging)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "anchor" : "View-Aligned-Behavior",
          "level" : 3,
          "text" : "View Aligned Behavior",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "SwiftUI offers a ",
              "type" : "text"
            },
            {
              "code" : "ViewAlignedScrollTargetBehavior",
              "type" : "codeVoice"
            },
            {
              "text" : " scroll behavior",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that will always settle on the geometry of individual views.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "ScrollView(.horizontal) {",
            "    LazyHStack(spacing: 10.0) {",
            "        ForEach(items) { item in",
            "            ItemView(item)",
            "        }",
            "    }",
            "    .scrollTargetLayout()",
            "}",
            ".scrollTargetBehavior(.viewAligned)",
            ".safeAreaPadding(.horizontal, 20.0)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You configure which views should be used for settling using the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/scrollTargetLayout(isEnabled:)",
              "type" : "codeVoice"
            },
            {
              "text" : " modifier. Apply this modifier to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a layout container like ",
              "type" : "text"
            },
            {
              "code" : "LazyVStack",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "HStack",
              "type" : "codeVoice"
            },
            {
              "text" : " and each individual",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "view in that layout will be considered for alignment.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/hsba\/scrolltargetbehavior(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA": {
  "abstract" : [
    {
      "text" : "An HSBA (hue, saturation, brightness, alpha) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "role" : "symbol",
  "title" : "HSBA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA/scrollTargetBehavior(_:)": {
  "abstract" : [
    {
      "text" : "Sets the scroll behavior of views scrollable in the provided axes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scrollTargetBehavior"
    },
    {
      "kind" : "text",
      "text" : "(some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI20ScrollTargetBehaviorP",
      "text" : "ScrollTargetBehavior"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/scrollTargetBehavior(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scrollTargetBehavior(_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba\/scrolltargetbehavior(_:)"
}
}
}