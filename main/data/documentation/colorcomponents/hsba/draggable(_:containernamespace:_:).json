{
  "abstract" : [
    {
      "text" : "Activates this view as the source of a drag and drop operation,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "allowing to provide optional identifiable",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "payload and specify the namespace of the drag container this view",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "belongs to.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/draggable(_:containerNamespace:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE9draggable_18containerNamespace_Qrqd__m_AA0F0V2IDVSgqd__Sgyct16CoreTransferable0I0Rd__s12IdentifiableRd__s8SendableAHsANPRpd__lF::SYNTHESIZED::s:15ColorComponents4HSBAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "draggable"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Item"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Item"
      },
      {
        "kind" : "text",
        "text" : ".Type, "
      },
      {
        "kind" : "externalParam",
        "text" : "containerNamespace"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI9NamespaceV",
        "text" : "Namespace"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI9NamespaceV2IDV",
        "text" : "ID"
      },
      {
        "kind" : "text",
        "text" : "?, () -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Item"
      },
      {
        "kind" : "text",
        "text" : "?) -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "26.0",
        "name" : "macOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "draggable(_:containerNamespace:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "draggable"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "itemType"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : ".Type = Item.self, "
            },
            {
              "kind" : "externalParam",
              "text" : "containerNamespace"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI9NamespaceV",
              "text" : "Namespace"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI9NamespaceV2IDV",
              "text" : "ID"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "item"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@escaping "
            },
            {
              "kind" : "text",
              "text" : "() -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : "?) -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:16CoreTransferable0B0P",
              "text" : "Transferable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s12IdentifiableP",
              "text" : "Identifiable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Item"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s12IdentifiableP2IDQa",
              "text" : "ID"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A type of the dragged item.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "itemType"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A namespace of the associated drag container.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "containerNamespace"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that returns a single",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "instance or a value conforming to ",
                  "type" : "text"
                },
                {
                  "text" : "doc:\/\/com.apple.documentation\/documentation\/coretransferable\/transferable",
                  "type" : "text"
                },
                {
                  "text" : " that",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "represents the draggable data from this view.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "payload"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that activates this view as the source of a drag and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "drop operation, beginning with user gesture input.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Applying the ",
              "type" : "text"
            },
            {
              "code" : "draggable(_:containerNamespace_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " modifier adds the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "appropriate gestures for drag and drop to this view.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "   var fruits: [Fruit]",
            "",
            "   var body: some View {",
            "       ScrollView {",
            "           VStack {",
            "               ForEach(fruits) { fruit in",
            "                   FruitView(fruit)",
            "                       .draggable(fruit)",
            "               }",
            "           }",
            "       }",
            "   }",
            "",
            "   struct Fruit: Identifiable, Transferable { ... }"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If the draggable view is enclosed in a container, it participates",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "in container drag-and-drop sessions:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "   var fruits: [Fruit]",
            "   var selectedFruits: [Fruit.ID]",
            "",
            "   var body: some View {",
            "       ScrollView {",
            "           VStack {",
            "               ForEach(fruits) { fruit in",
            "                   FruitView(fruit)",
            "                       .draggable(fruit)",
            "               }",
            "           }",
            "       }",
            "       .dragContainer(for: Fruit.self) { identifiers in",
            "           fruits(with: identifiers)",
            "       }",
            "       .dragContainerSelection(selectedFruits)",
            "   }",
            "",
            "   func fruits(with: [Fruit.ID]) -> [Fruit] { ... }",
            "   struct Fruit: Identifiable, Transferable { ... }"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When a drag operation begins, a rendering of this view is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "generated and used as the preview image.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/hsba\/draggable(_:containernamespace:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [
    {
      "text" : "Easily deal with various representations of colors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA": {
  "abstract" : [
    {
      "text" : "An HSBA (hue, saturation, brightness, alpha) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HSBA"
    }
  ],
  "role" : "symbol",
  "title" : "HSBA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba"
},
"doc://ColorComponents/documentation/ColorComponents/HSBA/draggable(_:containerNamespace:_:)": {
  "abstract" : [
    {
      "text" : "Activates this view as the source of a drag and drop operation,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "allowing to provide optional identifiable",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "payload and specify the namespace of the drag container this view",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "belongs to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "draggable"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Item"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Item"
    },
    {
      "kind" : "text",
      "text" : ".Type, "
    },
    {
      "kind" : "externalParam",
      "text" : "containerNamespace"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI9NamespaceV",
      "text" : "Namespace"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI9NamespaceV2IDV",
      "text" : "ID"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Item"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSBA\/draggable(_:containerNamespace:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "draggable(_:containerNamespace:_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsba\/draggable(_:containernamespace:_:)"
}
}
}