{
  "abstract" : [
    {
      "text" : "Sets a particular container value of a view.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BW"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BW\/containerValue(_:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE14containerValueyQrs15WritableKeyPathCyAA15ContainerValuesVqd__G_qd__tlF::SYNTHESIZED::s:15ColorComponents2BWV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "containerValue"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "V"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s15WritableKeyPathC",
        "text" : "WritableKeyPath"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI15ContainerValuesV",
        "text" : "ContainerValues"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "V"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "V"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "18.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "18.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "visionOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "11.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "containerValue(_:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "containerValue"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "V"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "keyPath"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s15WritableKeyPathC",
              "text" : "WritableKeyPath"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI15ContainerValuesV",
              "text" : "ContainerValues"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "V"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "value"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "V"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A key path that indicates the property of the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "ContainerValues",
                  "type" : "codeVoice"
                },
                {
                  "text" : " structure to update.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "keyPath"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The new value to set for the item specified by ",
                  "type" : "text"
                },
                {
                  "code" : "keyPath",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "value"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that has the given value set in its containerValues.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this modifier to set one of the writable properties of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "ContainerValues",
              "type" : "codeVoice"
            },
            {
              "text" : " structure, including custom values that you",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "create.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Like preferences, container values are able to be read by views above",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the view they’re set on. Unlike preferences, however, container values",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "don’t have merging behavior because they don’t escape their closest",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "container. In the following example, the container value is set",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "on the contained view, but is dropped when it reaches the containing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "VStack",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "VStack {",
            "    Text(\"A\")",
            "        .containerValue(\\.myCustomValue, 1) \/\/ myCustomValue = 1",
            "    Text(\"B\")",
            "        .containerValue(\\.myCustomValue, 2) \/\/ myCustomValue = 2",
            "    \/\/ container values are unaffected by views that aren't containers:",
            "    Text(\"C\")",
            "        .containerValue(\\.myCustomValue, 3)",
            "        .padding() \/\/ myCustomValue = 3",
            "} \/\/ myCustomValue = it's default value, values do not escape the container"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Even if a stack has only one child, container values still won’t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "be readable outside of the ",
              "type" : "text"
            },
            {
              "code" : "VStack",
              "type" : "codeVoice"
            },
            {
              "text" : ". Container values don’t escape a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "container even if the container has only one child.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In this example, a direct subview writes a container value, allowing its",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "direct container view to read it back:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@ViewBuilder var content: some View {",
            "    Text(\"A\")",
            "        .containerValue(\\.myCustomValue, 1)",
            "}",
            "",
            "ForEach(subviews: content) { subview in",
            "    Text(\"value = \\(subview.containerValues.myCustomValue)\") \/\/ shows \"value = 1\"",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "However in the next example, the wrapping ",
              "type" : "text"
            },
            {
              "code" : "VStack",
              "type" : "codeVoice"
            },
            {
              "text" : " means the ",
              "type" : "text"
            },
            {
              "code" : "Text",
              "type" : "codeVoice"
            },
            {
              "text" : " view",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is not a direct subview of the outer container, so that container cannot",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "read the changed value:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@ViewBuilder var containedContent: some View {",
            "    VStack {",
            "        Text(\"A\")",
            "            .containerValue(\\.myCustomValue, 1)",
            "    }",
            "}",
            "",
            "ForEach(subviews: containedContent) { subviews in",
            "    Text(\"value = \\(subview.containerValues.myCustomValue)\") \/\/ shows the default value",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The container values modifier can also be used to modify mutable",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "subfields of container values.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct PinPosition {",
            "    var rotation: Double = 0",
            "    var xOffset: Int = 0",
            "}",
            "",
            "extension ContainerValues {",
            "    @Entry var pinPosition: PinPosition = .init()",
            "}",
            "",
            "\/\/ pinPosition.rotation = 0, pinPosition.xOffset = 3",
            "Text(\"A\").containerValue(\\.pinPosition.xOffset, 3)",
            "",
            "\/\/ pinPosition.rotation = 10, pinPosition.xOffset = 5",
            "Text(\"B\")",
            "    .containerValue(\\.pinPosition.rotation, 10)",
            "    .containerValue(\\.pinPosition.xOffset, 5)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "This allows you to group multiple related container values into",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "structs while maintaining separate modifiers to write each value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "extension View {",
            "    func pinRotation(_ rotation: Double) -> some View {",
            "        containerValue(\\.pinPosition.rotation, rotation)",
            "    }",
            "",
            "    func pinXOffset(_ xOffset: Int) -> some View {",
            "        containerValue(\\.pinPosition.xOffset, xOffset)",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/bw\/containervalue(_:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [
    {
      "text" : "Easily deal with various representations of colors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/BW": {
  "abstract" : [
    {
      "text" : "An opaque black\/white color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BW"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BW",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BW"
    }
  ],
  "role" : "symbol",
  "title" : "BW",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bw"
},
"doc://ColorComponents/documentation/ColorComponents/BW/containerValue(_:_:)": {
  "abstract" : [
    {
      "text" : "Sets a particular container value of a view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containerValue"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s15WritableKeyPathC",
      "text" : "WritableKeyPath"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI15ContainerValuesV",
      "text" : "ContainerValues"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BW\/containerValue(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containerValue(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bw\/containervalue(_:_:)"
}
}
}