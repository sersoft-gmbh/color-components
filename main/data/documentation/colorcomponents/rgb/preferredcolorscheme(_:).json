{
  "abstract" : [
    {
      "text" : "Sets the preferred color scheme for this presentation.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/preferredColorScheme(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE20preferredColorSchemeyQrAA0eF0OSgF::SYNTHESIZED::s:15ColorComponents3RGBV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "preferredColorScheme"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI11ColorSchemeO",
        "text" : "ColorScheme"
      },
      {
        "kind" : "text",
        "text" : "?) -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "11.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "preferredColorScheme(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "preferredColorScheme"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "colorScheme"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI11ColorSchemeO",
              "text" : "ColorScheme"
            },
            {
              "kind" : "text",
              "text" : "?) -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The preferred color scheme for this view, or",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "nil",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to indicate no preference.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "colorScheme"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that sets the color scheme.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use one of the values in ",
              "type" : "text"
            },
            {
              "code" : "ColorScheme",
              "type" : "codeVoice"
            },
            {
              "text" : " with this modifier to set a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "preferred color scheme for the nearest enclosing presentation, like a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "popover, a sheet, or a window. The value that you set overrides the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "user’s Dark Mode selection for that presentation. In the example below,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "code" : "Toggle",
              "type" : "codeVoice"
            },
            {
              "text" : " controls an ",
              "type" : "text"
            },
            {
              "code" : "isDarkMode",
              "type" : "codeVoice"
            },
            {
              "text" : " state variable, which in turn",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "controls the color scheme of the sheet that contains the toggle:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@State private var isPresented = false",
            "@State private var isDarkMode = true",
            "",
            "var body: some View {",
            "    Button(\"Show Sheet\") {",
            "        isPresented = true",
            "    }",
            "    .sheet(isPresented: $isPresented) {",
            "        List {",
            "            Toggle(\"Dark Mode\", isOn: $isDarkMode)",
            "        }",
            "        .preferredColorScheme(isDarkMode ? .dark : nil)",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you apply the modifier to any of the views in the sheet — which in",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "this case are a ",
              "type" : "text"
            },
            {
              "code" : "List",
              "type" : "codeVoice"
            },
            {
              "text" : " and a ",
              "type" : "text"
            },
            {
              "code" : "Toggle",
              "type" : "codeVoice"
            },
            {
              "text" : " — the value that you set",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "propagates up through the view hierarchy to the enclosing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "presentation, or until another color scheme modifier higher in the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "hierarchy overrides it. The value you set also flows down to all child",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "views of the enclosing presentation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Pass ",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : " to indicate that there is no preferred color scheme for this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "view. This is useful in cases where a preferred color scheme should only",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "be applied conditionally. In the previous example, the sheet will prefer",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "dark mode when ",
              "type" : "text"
            },
            {
              "code" : "isDarkMode",
              "type" : "codeVoice"
            },
            {
              "text" : " is set to ",
              "type" : "text"
            },
            {
              "code" : "true",
              "type" : "codeVoice"
            },
            {
              "text" : ", but otherwise defer to the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "color scheme as determined by the system.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Multiple views in the same view hierarchy can set a preferred color",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "scheme. Applying this modifier overrides any existing preferred color",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "scheme set for the view, such as by one of its subviews. If there are",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "conflicting, non-",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : " color scheme preferences set by parallel branches",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of the view hierarchy, the system will prioritize the first non-",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "preference based on the order of the views. In the example below, the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "preferred color scheme for the entire view will resolve to ",
              "type" : "text"
            },
            {
              "code" : ".dark",
              "type" : "codeVoice"
            },
            {
              "text" : ", from",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the second view:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "VStack {",
            "    Text(\"First\")",
            "        .preferredColorScheme(.light)",
            "        .preferredColorScheme(nil) \/\/ overrides `.light`",
            "",
            "    Text(\"Second\")",
            "        .preferredColorScheme(.dark)",
            "",
            "    Text(\"Third\")",
            "        .preferredColorScheme(.light)",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "A common use for this modifier is to create side-by-side previews",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of the same view with light and dark appearances:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct MyView_Previews: PreviewProvider {",
            "    static var previews: some View {",
            "        MyView().preferredColorScheme(.light)",
            "        MyView().preferredColorScheme(.dark)",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you need to detect the color scheme that currently applies to a view,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "read the ",
              "type" : "text"
            },
            {
              "code" : "EnvironmentValues\/colorScheme",
              "type" : "codeVoice"
            },
            {
              "text" : " environment value:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@Environment(\\.colorScheme) private var colorScheme",
            "",
            "var body: some View {",
            "    Text(colorScheme == .dark ? \"Dark\" : \"Light\")",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/rgb\/preferredcolorscheme(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/RGB": {
  "abstract" : [
    {
      "text" : "An opaque RGB (red, green, blue) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "role" : "symbol",
  "title" : "RGB",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb"
},
"doc://ColorComponents/documentation/ColorComponents/RGB/preferredColorScheme(_:)": {
  "abstract" : [
    {
      "text" : "Sets the preferred color scheme for this presentation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preferredColorScheme"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI11ColorSchemeO",
      "text" : "ColorScheme"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/preferredColorScheme(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preferredColorScheme(_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb\/preferredcolorscheme(_:)"
}
}
}