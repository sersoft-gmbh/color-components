{
  "abstract" : [
    {
      "text" : "Sets the view’s background to the default background style.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/background(ignoresSafeAreaEdges:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUI",
    "externalID" : "s:7SwiftUI4ViewPAAE10background20ignoresSafeAreaEdgesQrAA4EdgeO3SetV_tF::SYNTHESIZED::s:15ColorComponents3RGBV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "background"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "ignoresSafeAreaEdges"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4EdgeO",
        "text" : "Edge"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4EdgeO3SetV",
        "text" : "Set"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUI"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "background(ignoresSafeAreaEdges:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "background"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "ignoresSafeAreaEdges"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "edges"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4EdgeO",
              "text" : "Edge"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4EdgeO3SetV",
              "text" : "Set"
            },
            {
              "kind" : "text",
              "text" : " = .all) -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The set of edges for which to ignore safe area insets",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "when adding the background. The default value is ",
                  "type" : "text"
                },
                {
                  "code" : "Edge\/Set\/all",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Specify an empty set to respect safe area insets on all edges.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "edges"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view with the ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/background",
              "type" : "codeVoice"
            },
            {
              "text" : " shape style",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "drawn behind it.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This modifier behaves like ",
              "type" : "text"
            },
            {
              "code" : "View\/background(_:ignoresSafeAreaEdges:)",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "except that it always uses the ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/background",
              "type" : "codeVoice"
            },
            {
              "text" : " shape style.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, you can add a background to a ",
              "type" : "text"
            },
            {
              "code" : "Label",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "ZStack {",
            "    Color.teal",
            "    Label(\"Flag\", systemImage: \"flag.fill\")",
            "        .padding()",
            "        .background()",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Without the background modifier, the teal color behind the label shows",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "through the label. With the modifier, the label’s text and icon appear",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "backed by a region filled with a color that’s appropriate for light",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or dark appearance:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you want to specify a ",
              "type" : "text"
            },
            {
              "code" : "View",
              "type" : "codeVoice"
            },
            {
              "text" : " or a stack of views as the background,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "use ",
              "type" : "text"
            },
            {
              "code" : "View\/background(alignment:content:)",
              "type" : "codeVoice"
            },
            {
              "text" : " instead.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To specify a ",
              "type" : "text"
            },
            {
              "code" : "Shape",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "InsettableShape",
              "type" : "codeVoice"
            },
            {
              "text" : ", use",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/background(_:in:fillStyle:)-89n7j",
              "type" : "codeVoice"
            },
            {
              "text" : " or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/background(_:in:fillStyle:)-20tq5",
              "type" : "codeVoice"
            },
            {
              "text" : ", respectively.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To configure the background of a presentation, like a sheet, use",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/presentationBackground(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/rgb\/background(ignoressafeareaedges:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/RGB": {
  "abstract" : [
    {
      "text" : "An opaque RGB (red, green, blue) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "role" : "symbol",
  "title" : "RGB",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb"
},
"doc://ColorComponents/documentation/ColorComponents/RGB/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/RGB/background(ignoresSafeAreaEdges:)": {
  "abstract" : [
    {
      "text" : "Sets the view’s background to the default background style.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "background"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ignoresSafeAreaEdges"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4EdgeO",
      "text" : "Edge"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4EdgeO3SetV",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/background(ignoresSafeAreaEdges:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "background(ignoresSafeAreaEdges:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb\/background(ignoressafeareaedges:)"
}
}
}