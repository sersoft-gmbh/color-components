{
  "abstract" : [
    {
      "text" : "Adds a context menu with a custom preview to a view.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/contextMenu(menuItems:preview:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE11contextMenu9menuItems7previewQrqd__yXE_qd_0_yXEtAaBRd__AaBRd_0_r0_lF::SYNTHESIZED::s:15ColorComponents3BWAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "contextMenu"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "M"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "P"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "menuItems"
      },
      {
        "kind" : "text",
        "text" : ": () -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "M"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "preview"
      },
      {
        "kind" : "text",
        "text" : ": () -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "P"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "16.0",
        "name" : "tvOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "contextMenu(menuItems:preview:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "contextMenu"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "M"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "P"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "attribute",
              "text" : "@"
            },
            {
              "kind" : "attribute",
              "preciseIdentifier" : "s:7SwiftUI11ViewBuilderV",
              "text" : "ViewBuilder"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "externalParam",
              "text" : "menuItems"
            },
            {
              "kind" : "text",
              "text" : ": () -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "M"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "attribute",
              "text" : "@"
            },
            {
              "kind" : "attribute",
              "preciseIdentifier" : "s:7SwiftUI11ViewBuilderV",
              "text" : "ViewBuilder"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "externalParam",
              "text" : "preview"
            },
            {
              "kind" : "text",
              "text" : ": () -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "P"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "M"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "P"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that produces the menu’s contents. You can",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "deactivate the context menu by returning nothing from the closure.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "menuItems"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A view that the system displays along with the menu.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "preview"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that can display a context menu with a preview.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you use this modifer to add a context menu to a view in your",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "app’s user interface, the system displays the custom preview beside the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "menu.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Compose the menu by returning controls like ",
              "type" : "text"
            },
            {
              "code" : "Button",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "Toggle",
              "type" : "codeVoice"
            },
            {
              "text" : ", and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Picker",
              "type" : "codeVoice"
            },
            {
              "text" : " from the ",
              "type" : "text"
            },
            {
              "code" : "menuItems",
              "type" : "codeVoice"
            },
            {
              "text" : " closure. You can also use ",
              "type" : "text"
            },
            {
              "code" : "Menu",
              "type" : "codeVoice"
            },
            {
              "text" : " to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "define submenus or ",
              "type" : "text"
            },
            {
              "code" : "Section",
              "type" : "codeVoice"
            },
            {
              "text" : " to group items.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Define the custom preview by returning a view from the ",
              "type" : "text"
            },
            {
              "code" : "preview",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "closure. The system sizes the preview to match the size of its content.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, you can add a two button context menu to a ",
              "type" : "text"
            },
            {
              "code" : "Text",
              "type" : "codeVoice"
            },
            {
              "text" : " view,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and use an ",
              "type" : "text"
            },
            {
              "code" : "Image",
              "type" : "codeVoice"
            },
            {
              "text" : " as the preview:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Text(\"Turtle Rock\")",
            "    .padding()",
            "    .contextMenu {",
            "        Button {",
            "            \/\/ Add this item to a list of favorites.",
            "        } label: {",
            "            Label(\"Add to Favorites\", systemImage: \"heart\")",
            "        }",
            "        Button {",
            "            \/\/ Open Maps and center it on this item.",
            "        } label: {",
            "            Label(\"Show in Maps\", systemImage: \"mappin\")",
            "        }",
            "    } preview: {",
            "        Image(\"turtlerock\") \/\/ Loads the image from an asset catalog.",
            "    }"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When someone activates the context menu with an action like touch and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "hold in iOS or iPadOS, the system displays the image and the menu:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "To customize the lift preview, shown while the system transitions",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to show your custom ",
              "type" : "text"
            },
            {
              "code" : "preview",
              "type" : "codeVoice"
            },
            {
              "text" : ", apply a ",
              "type" : "text"
            },
            {
              "code" : "View\/contentShape(_:_:eoFill:)",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "with a ",
              "type" : "text"
            },
            {
              "code" : "ContentShapeKinds\/contextMenuPreview",
              "type" : "codeVoice"
            },
            {
              "text" : " kind. For example, you",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "can change the lift preview’s corner radius or use a nested view as the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "lift preview.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "This view modifier produces a context menu on macOS, but that",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "platform doesn’t display the preview.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you don’t need a preview, use ",
              "type" : "text"
            },
            {
              "code" : "View\/contextMenu(menuItems:)",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "instead. If you want to add a context menu to a container that supports",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "selection, like a ",
              "type" : "text"
            },
            {
              "code" : "List",
              "type" : "codeVoice"
            },
            {
              "text" : " or a ",
              "type" : "text"
            },
            {
              "code" : "Table",
              "type" : "codeVoice"
            },
            {
              "text" : ", and you want to distinguish",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "between menu activation on a selection and activation in an empty area",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of the container, use",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/contextMenu(forSelectionType:menu:primaryAction:)",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/bwa\/contextmenu(menuitems:preview:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/BWA": {
  "abstract" : [
    {
      "text" : "A black\/white color components representation with an alpha channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BWA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BWA"
    }
  ],
  "role" : "symbol",
  "title" : "BWA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa"
},
"doc://ColorComponents/documentation/ColorComponents/BWA/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/BWA/contextMenu(menuItems:preview:)": {
  "abstract" : [
    {
      "text" : "Adds a context menu with a custom preview to a view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contextMenu"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "menuItems"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "preview"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/contextMenu(menuItems:preview:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contextMenu(menuItems:preview:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa\/contextmenu(menuitems:preview:)"
}
}
}