{
  "abstract" : [
    {
      "text" : "Sets a view’s foreground elements to use a given style.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSL"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSL\/foregroundStyle(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE15foregroundStyleyQrqd__AA05ShapeE0Rd__lF::SYNTHESIZED::s:15ColorComponents3HSLV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "foregroundStyle"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "foregroundStyle(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "foregroundStyle"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "style"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI10ShapeStyleP",
              "text" : "ShapeStyle"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The color or pattern to use when filling in the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "foreground elements. To indicate a specific value, use ",
                  "type" : "text"
                },
                {
                  "code" : "Color",
                  "type" : "codeVoice"
                },
                {
                  "text" : " or",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "ShapeStyle\/image(_:sourceRect:scale:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", or one of the gradient",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "types, like",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "ShapeStyle\/linearGradient(colors:startPoint:endPoint:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". To set a",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "style that’s relative to the containing view’s style, use one of the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "semantic styles, like ",
                  "type" : "text"
                },
                {
                  "code" : "ShapeStyle\/primary",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "style"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A view that uses the given foreground style.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this method to style",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "foreground content like text, shapes, and template images",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(including symbols):",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "HStack {",
            "    Image(systemName: \"triangle.fill\")",
            "    Text(\"Hello, world!\")",
            "    RoundedRectangle(cornerRadius: 5)",
            "        .frame(width: 40, height: 20)",
            "}",
            ".foregroundStyle(.teal)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The example above creates a row of ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/teal",
              "type" : "codeVoice"
            },
            {
              "text" : " foreground",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "elements:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can use any style that conforms to the ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle",
              "type" : "codeVoice"
            },
            {
              "text" : " protocol,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "like the ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/teal",
              "type" : "codeVoice"
            },
            {
              "text" : " color in the example above, or the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/linearGradient(colors:startPoint:endPoint:)",
              "type" : "codeVoice"
            },
            {
              "text" : " gradient",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "shown below:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Text(\"Gradient Text\")",
            "    .font(.largeTitle)",
            "    .foregroundStyle(",
            "        .linearGradient(",
            "            colors: [.yellow, .blue],",
            "            startPoint: .top,",
            "            endPoint: .bottom",
            "        )",
            "    )"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If you want to fill a single ",
                  "type" : "text"
                },
                {
                  "code" : "Shape",
                  "type" : "codeVoice"
                },
                {
                  "text" : " instance with a style,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "use the ",
                  "type" : "text"
                },
                {
                  "code" : "Shape\/fill(style:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " shape modifier instead because it’s more",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "efficient.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "SwiftUI creates a context-dependent render for a given style.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For example, a ",
              "type" : "text"
            },
            {
              "code" : "Color",
              "type" : "codeVoice"
            },
            {
              "text" : " that you load from an asset catalog",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "can have different light and dark appearances, while some styles",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "also vary by platform.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Hierarchical foreground styles like ",
              "type" : "text"
            },
            {
              "code" : "ShapeStyle\/secondary",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "don’t impose a style of their own, but instead modify other styles.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "In particular, they modify the primary",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "level of the current foreground style to the degree given by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the hierarchical style’s name.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "To find the current foreground style to modify, SwiftUI looks for",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the innermost containing style that you apply with the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "foregroundStyle(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " or the ",
              "type" : "text"
            },
            {
              "code" : "View\/foregroundColor(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " modifier.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "If you haven’t specified a style, SwiftUI uses the default foreground",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "style, as in the following example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "VStack(alignment: .leading) {",
            "    Label(\"Primary\", systemImage: \"1.square.fill\")",
            "    Label(\"Secondary\", systemImage: \"2.square.fill\")",
            "        .foregroundStyle(.secondary)",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you add a foreground style on the enclosing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "VStack",
              "type" : "codeVoice"
            },
            {
              "text" : ", the hierarchical styling responds accordingly:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "VStack(alignment: .leading) {",
            "    Label(\"Primary\", systemImage: \"1.square.fill\")",
            "    Label(\"Secondary\", systemImage: \"2.square.fill\")",
            "        .foregroundStyle(.secondary)",
            "}",
            ".foregroundStyle(.blue)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you apply a custom style to a view, the view disables the vibrancy",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "effect for foreground elements in that view, or in any of its child",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "views, that it would otherwise gain from adding a background material",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "— for example, using the ",
              "type" : "text"
            },
            {
              "code" : "View\/background(_:ignoresSafeAreaEdges:)",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "modifier. However, hierarchical styles applied to the default foreground",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "don’t disable vibrancy.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/hsl\/foregroundstyle(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [
    {
      "text" : "Easily deal with various representations of colors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/HSL": {
  "abstract" : [
    {
      "text" : "An opaque HSL (hue, saturation, luminance) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HSL"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSL",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HSL"
    }
  ],
  "role" : "symbol",
  "title" : "HSL",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsl"
},
"doc://ColorComponents/documentation/ColorComponents/HSL/foregroundStyle(_:)": {
  "abstract" : [
    {
      "text" : "Sets a view’s foreground elements to use a given style.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "foregroundStyle"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/HSL\/foregroundStyle(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "foregroundStyle(_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/hsl\/foregroundstyle(_:)"
}
}
}