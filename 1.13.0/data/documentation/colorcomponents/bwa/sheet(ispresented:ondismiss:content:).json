{
  "abstract" : [
    {
      "text" : "Presents a sheet when a binding to a Boolean value that you",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provide is true.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/sheet(isPresented:onDismiss:content:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE5sheet11isPresented9onDismiss7contentQrAA7BindingVySbG_yycSgqd__yctAaBRd__lF::SYNTHESIZED::s:15ColorComponents3BWAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sheet"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Content"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "isPresented"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI7BindingV",
        "text" : "Binding"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "onDismiss"
      },
      {
        "kind" : "text",
        "text" : ": (() -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s4Voida",
        "text" : "Void"
      },
      {
        "kind" : "text",
        "text" : ")?, "
      },
      {
        "kind" : "externalParam",
        "text" : "content"
      },
      {
        "kind" : "text",
        "text" : ": () -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Content"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "sheet(isPresented:onDismiss:content:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "sheet"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "isPresented"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI7BindingV",
              "text" : "Binding"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "onDismiss"
            },
            {
              "kind" : "text",
              "text" : ": (() -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s4Voida",
              "text" : "Void"
            },
            {
              "kind" : "text",
              "text" : ")? = nil, "
            },
            {
              "kind" : "attribute",
              "text" : "@"
            },
            {
              "kind" : "attribute",
              "preciseIdentifier" : "s:7SwiftUI11ViewBuilderV",
              "text" : "ViewBuilder"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "externalParam",
              "text" : "content"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "@escaping"
            },
            {
              "kind" : "text",
              "text" : " () -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A binding to a Boolean value that determines whether",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "to present the sheet that you create in the modifier’s",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "content",
                  "type" : "codeVoice"
                },
                {
                  "text" : " closure.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "isPresented"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The closure to execute when dismissing the sheet.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "onDismiss"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that returns the content of the sheet.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "content"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this method when you want to present a modal view to the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "user when a Boolean value you provide is true. The example",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "below displays a modal view of the mockup for a software license",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "agreement when the user toggles the ",
              "type" : "text"
            },
            {
              "code" : "isShowingSheet",
              "type" : "codeVoice"
            },
            {
              "text" : " variable by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "clicking or tapping on the “Show License Agreement” button:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct ShowLicenseAgreement: View {",
            "    @State private var isShowingSheet = false",
            "    var body: some View {",
            "        Button(action: {",
            "            isShowingSheet.toggle()",
            "        }) {",
            "            Text(\"Show License Agreement\")",
            "        }",
            "        .sheet(isPresented: $isShowingSheet,",
            "               onDismiss: didDismiss) {",
            "            VStack {",
            "                Text(\"License Agreement\")",
            "                    .font(.title)",
            "                    .padding(50)",
            "                Text(\"\"\"",
            "                        Terms and conditions go here.",
            "                    \"\"\")",
            "                    .padding(50)",
            "                Button(\"Dismiss\",",
            "                       action: { isShowingSheet.toggle() })",
            "            }",
            "        }",
            "    }",
            "",
            "    func didDismiss() {",
            "        \/\/ Handle the dismissing action.",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In vertically compact environments, such as iPhone in landscape",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "orientation, a sheet presentation automatically adapts to appear as a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "full-screen cover. Use the ",
              "type" : "text"
            },
            {
              "code" : "View\/presentationCompactAdaptation(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "View\/presentationCompactAdaptation(horizontal:vertical:)",
              "type" : "codeVoice"
            },
            {
              "text" : " modifier to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "override this behavior.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/bwa\/sheet(ispresented:ondismiss:content:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/BWA": {
  "abstract" : [
    {
      "text" : "A black\/white color components representation with an alpha channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BWA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BWA"
    }
  ],
  "role" : "symbol",
  "title" : "BWA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa"
},
"doc://ColorComponents/documentation/ColorComponents/BWA/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/BWA/sheet(isPresented:onDismiss:content:)": {
  "abstract" : [
    {
      "text" : "Presents a sheet when a binding to a Boolean value that you",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provide is true.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sheet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Content"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "isPresented"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI7BindingV",
      "text" : "Binding"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "onDismiss"
    },
    {
      "kind" : "text",
      "text" : ": (() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "content"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Content"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/BWA\/sheet(isPresented:onDismiss:content:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sheet(isPresented:onDismiss:content:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/bwa\/sheet(ispresented:ondismiss:content:)"
}
}
}