{
  "abstract" : [
    {
      "text" : "Sets the sizing of the containing presentation.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/presentationSizing(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUICore",
    "externalID" : "s:7SwiftUI4ViewPAAE18presentationSizingyQrqd__AA012PresentationE0Rd__lF::SYNTHESIZED::s:15ColorComponents3RGBV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "presentationSizing"
      },
      {
        "kind" : "text",
        "text" : "(some "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI18PresentationSizingP",
        "text" : "PresentationSizing"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUICore"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "18.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "18.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "visionOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "11.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "presentationSizing(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "nonisolated"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "presentationSizing"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "sizing"
            },
            {
              "kind" : "text",
              "text" : ": some "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI18PresentationSizingP",
              "text" : "PresentationSizing"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A value dictating size to propose to presentation content",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "and how the presentation responds to changes in content size.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "sizing"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this modifier to apply a ",
              "type" : "text"
            },
            {
              "code" : "PresentationSizing",
              "type" : "codeVoice"
            },
            {
              "text" : " to a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "presentation like ",
              "type" : "text"
            },
            {
              "code" : "View\/sheet(isPresented:onDismiss:content:)",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "sizing",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter defines the size proposed to the content, and the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "presentation adopts the returned size. The default value is ",
              "type" : "text"
            },
            {
              "code" : "automatic",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Sizings can be modified to fix their dimensions based on the content,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and optionally be sticky.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "code" : "PresentationSizing\/fitted(horizontal:vertical:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " and",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "PresentationSizing\/sticky(horizontal:vertical:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "See Also",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If the presentationâ€™s root container is a ",
                  "type" : "text"
                },
                {
                  "code" : "NavigationSplitView",
                  "type" : "codeVoice"
                },
                {
                  "text" : ",",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "the proposed width only applies to the ",
                  "type" : "text"
                },
                {
                  "code" : "detail",
                  "type" : "codeVoice"
                },
                {
                  "text" : " column. The ",
                  "type" : "text"
                },
                {
                  "code" : "sidebar",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "and ",
                  "type" : "text"
                },
                {
                  "code" : "content",
                  "type" : "codeVoice"
                },
                {
                  "text" : " column widths use system-provided values, or those from",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "View\/navigationSplitViewColumnWidth(_:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " or",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "View\/navigationSplitViewColumnWidth(min:ideal:max:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " modifiers.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, a presentation with facts about flowers could",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "prefer ",
              "type" : "text"
            },
            {
              "code" : ".page",
              "type" : "codeVoice"
            },
            {
              "text" : " sizing because its content is primarily",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "informational. Since the user can choose different flowers from the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "picker, each with different lengths of information, the size is fitted",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "vertically to size the sheet to the textual content, and vertically",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "sticky is specified to prevent the presentation from changing size too",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "frequently as the user changes selection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct ContentView: View {",
            "    @State private var presentInfo = true",
            "",
            "    var body: some View {",
            "        ContentView.sheet(isPresented: $presentInfo) {",
            "            VStack {",
            "                Picker(\"Flower Species\", selection: $flower) {",
            "                    ForEach(Flower.allCases) {",
            "                        Text($0.rawValue.uppercased()).tag($0)",
            "                    }",
            "                }",
            "                Text(flower.emoji).font(.largeTitle)",
            "                Text(flower.informationalText)",
            "            }",
            "            .frame(maxHeight: .infinity, alignment: .top)",
            "            .padding()",
            "            .presentationSizing(",
            "                .page",
            "                    .fitted(horizontal: false, vertical: true)",
            "                    .sticky(horizontal: false, vertical: true))",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/rgb\/presentationsizing(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/RGB": {
  "abstract" : [
    {
      "text" : "An opaque RGB (red, green, blue) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RGB"
    }
  ],
  "role" : "symbol",
  "title" : "RGB",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb"
},
"doc://ColorComponents/documentation/ColorComponents/RGB/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/RGB/presentationSizing(_:)": {
  "abstract" : [
    {
      "text" : "Sets the sizing of the containing presentation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "presentationSizing"
    },
    {
      "kind" : "text",
      "text" : "(some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI18PresentationSizingP",
      "text" : "PresentationSizing"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGB\/presentationSizing(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "presentationSizing(_:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgb\/presentationsizing(_:)"
}
}
}