name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-spm:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-20.04 ]

    runs-on: ${{matrix.os}}

    steps:
      - if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/SwiftyActions@v1.1.1
        with:
          release-version: 5.4
          platform: ${{matrix.os}}
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.5
        with:
          path: .build
          key: ${{runner.os}}-${{github.repository}}-spm-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-${{github.repository}}-spm-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        if: runner.os == 'macOS'
        run: xcrun llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest/Contents/MacOS/*PackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      - name: Generate Coverage Files
        if: runner.os == 'Linux'
        run: llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      - uses: codecov/codecov-action@v1.5.0
        with:
            token: ${{secrets.CODECOV_TOKEN}}
            file: coverage.lcov
            fail_ci_if_error: true

  test-xcode:
    runs-on: macos-latest
    strategy:
      matrix:
        action: [ test ]
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=latest,name=iPhone 11 Pro
          - platform=iOS Simulator,OS=latest,name=iPad Pro (11-inch) (2nd generation)
          - platform=tvOS Simulator,OS=latest,name=Apple TV 4K
        # parallel-testing-enabled: [true]
        # enable-code-coverage: [true]
        # Watch currently doesn't work because there's no XCTest on watchOS
        # include:
        #   - action: build
        #     destination: platform=watchOS Simulator,OS=latest,name=Apple Watch Series 6 - 44mm
        #     parallel-testing-enabled: false
        #     enable-code-coverage: false
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          xcode-version: ^12.4
      - uses: actions/checkout@v2.3.4
      - uses: sersoft-gmbh/xcodebuild-action@v1.4
        with:
          spm-package: "./"
          scheme: color-components-Package
          destination: ${{matrix.destination}}
          action: ${{matrix.action}}
          parallel-testing-enabled: true
          enable-code-coverage: true
          # parallel-testing-enabled: ${{matrix.parallel-testing-enabled}}
          # enable-code-coverage: ${{matrix.enable-code-coverage}}
      - uses: codecov/codecov-action@v1.5.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
        if: matrix.action == 'test'
