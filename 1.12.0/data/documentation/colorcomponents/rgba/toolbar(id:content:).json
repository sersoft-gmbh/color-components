{
  "abstract" : [
    {
      "text" : "Populates the toolbar or navigation bar with the specified items,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "allowing for user customization.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ColorComponents\/documentation\/ColorComponents",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA",
        "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA\/View-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA\/toolbar(id:content:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUI",
    "externalID" : "s:7SwiftUI4ViewPAAE7toolbar2id7contentQrSS_qd__yXEtAA26CustomizableToolbarContentRd__lF::SYNTHESIZED::s:15ColorComponents4RGBAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "toolbar"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Content"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "content"
      },
      {
        "kind" : "text",
        "text" : ": () -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Content"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "keyword",
        "text" : "some"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7SwiftUI4ViewP",
        "text" : "View"
      }
    ],
    "modules" : [
      {
        "name" : "ColorComponents",
        "relatedModules" : [
          "SwiftUI"
        ]
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "14.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "11.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "14.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "7.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "toolbar(id:content:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "toolbar"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "id"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "attribute",
              "text" : "@"
            },
            {
              "kind" : "attribute",
              "preciseIdentifier" : "s:7SwiftUI21ToolbarContentBuilderV",
              "text" : "ToolbarContentBuilder"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "externalParam",
              "text" : "content"
            },
            {
              "kind" : "text",
              "text" : ": () -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "keyword",
              "text" : "some"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI4ViewP",
              "text" : "View"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Content"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI26CustomizableToolbarContentP",
              "text" : "CustomizableToolbarContent"
            },
            {
              "kind" : "text",
              "text" : "\n"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A unique identifier for this toolbar.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "id"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The content representing the content of the toolbar.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "content"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this modifier when you want to allow the user to customize the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "components and layout of elements in the toolbar. The toolbar modifier",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "expects a collection of toolbar items which you can provide either by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "supplying a collection of views with each view wrapped in a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "ToolbarItem",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Customizable toolbars will be displayed on both macOS and iOS,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "but only apps running on iPadOS 16.0 and later will support",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "user customization.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "The example below creates a view that represents each",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "ToolbarItem",
              "type" : "codeVoice"
            },
            {
              "text" : " along with an ID that uniquely identifies the toolbar",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "item to the customization editor:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct ToolsEditorView: View {",
            "    @State private var text = \"\"",
            "    @State private var bold = false",
            "    @State private var italic = false",
            "    @State private var fontSize = 12.0",
            "",
            "    var displayFont: Font {",
            "        let font = Font.system(",
            "           size: CGFloat(fontSize),",
            "             weight: bold == true ? .bold : .regular)",
            "        return italic == true ? font.italic() : font",
            "    }",
            "",
            "    var body: some View {",
            "        TextEditor(text: $text)",
            "            .font(displayFont)",
            "            .toolbar(id: \"editingtools\") {",
            "                ToolbarItem(",
            "                    id: \"sizeSelector\", placement: .secondaryAction",
            "                ) {",
            "                    Slider(",
            "                        value: $fontSize,",
            "                        in: 8...120,",
            "                        minimumValueLabel:",
            "                            Text(\"A\").font(.system(size: 8)),",
            "                        maximumValueLabel:",
            "                            Text(\"A\").font(.system(size: 16))",
            "                    ) {",
            "                        Text(\"Font Size (\\(Int(fontSize)))\")",
            "                    }",
            "                    .frame(width: 150)",
            "                }",
            "                ToolbarItem(",
            "                    id: \"bold\", placement: .secondaryAction",
            "                ) {",
            "                    Toggle(isOn: $bold) {",
            "                        Image(systemName: \"bold\")",
            "                    }",
            "                }",
            "                ToolbarItem(",
            "                    id: \"italic\", placement: .secondaryAction",
            "                ) {",
            "                    Toggle(isOn: $italic) {",
            "                        Image(systemName: \"italic\")",
            "                    }",
            "                }",
            "            }",
            "            .navigationTitle(\"My Note\")",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Only ",
                  "type" : "text"
                },
                {
                  "code" : "ToolbarItemPlacement\/secondaryAction",
                  "type" : "codeVoice"
                },
                {
                  "text" : " items support",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "customization in iPadOS. Other items follow the normal",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "placement rules and can’t be customized by the user.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "In macOS you can enable menu support for toolbar customization by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "adding a ",
              "type" : "text"
            },
            {
              "code" : "ToolbarCommands",
              "type" : "codeVoice"
            },
            {
              "text" : " instance to a scene using the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Scene\/commands(content:)",
              "type" : "codeVoice"
            },
            {
              "text" : " scene modifier:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@main",
            "struct ToolbarContent_macOSApp: App {",
            "    var body: some Scene {",
            "        WindowGroup {",
            "            ToolsEditorView()",
            "                .frame(maxWidth: .infinity, maxHeight: .infinity)",
            "        }",
            "        .commands {",
            "            ToolbarCommands()",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you add the toolbar commands, the system adds a menu item to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "your app’s main menu to provide toolbar customization support.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This is in addition to the ability to Control-click on the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "toolbar to open the toolbar customization editor.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [

          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/colorcomponents\/rgba\/toolbar(id:content:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ColorComponents/documentation/ColorComponents": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ColorComponents",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents"
},
"doc://ColorComponents/documentation/ColorComponents/RGBA": {
  "abstract" : [
    {
      "text" : "An RGBA (red, green, blue, alpha) color components representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RGBA"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RGBA"
    }
  ],
  "role" : "symbol",
  "title" : "RGBA",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgba"
},
"doc://ColorComponents/documentation/ColorComponents/RGBA/View-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA\/View-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View Implementations",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgba\/view-implementations"
},
"doc://ColorComponents/documentation/ColorComponents/RGBA/toolbar(id:content:)": {
  "abstract" : [
    {
      "text" : "Populates the toolbar or navigation bar with the specified items,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "allowing for user customization.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toolbar"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Content"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "content"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Content"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/ColorComponents\/documentation\/ColorComponents\/RGBA\/toolbar(id:content:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toolbar(id:content:)",
  "type" : "topic",
  "url" : "\/documentation\/colorcomponents\/rgba\/toolbar(id:content:)"
}
}
}